-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from WebDPConv/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	%start_pQuery -> Query                             (1)
	%start_pDatasetId -> DatasetId                     (2)
	%start_pBudget -> Budget                           (3)
	%start_pStringList -> StringList                   (4)
	%start_pQueryStep -> QueryStep                     (5)
	%start_pGroupRow -> GroupRow                       (6)
	%start_pDataType -> DataType                       (7)
	%start_pValue -> Value                             (8)
	%start_pMParam -> MParam                           (9)
	%start_pNoiseM -> NoiseM                           (10)
	%start_pBinMap -> BinMap                           (11)
	%start_pColumnSchema -> ColumnSchema               (12)
	%start_pListQueryStep -> ListQueryStep             (13)
	%start_pListString -> ListString                   (14)
	%start_pListColumnSchema -> ListColumnSchema       (15)
	%start_pListBinMap -> ListBinMap                   (16)
	%start_pListValue -> ListValue                     (17)
	%start_pListQuery -> ListQuery                     (18)
	%start_pListGroupRow -> ListGroupRow               (19)
	Ident -> L_Ident                                   (20)
	Double -> L_doubl                                  (21)
	Integer -> L_integ                                 (22)
	String -> L_quoted                                 (23)
	Prog -> ListQuery                                  (24)
	Query -> Ident DatasetId Budget '=' '(' ListQueryStep ')'   (25)
	DatasetId -> Integer                               (26)
	Budget -> Double                                   (27)
	Budget -> Double Double                            (28)
	StringList -> '[' ListString ']'                   (29)
	QueryStep -> 'SELECT' StringList                   (30)
	QueryStep -> 'RENAME' StringList 'TO' StringList   (31)
	QueryStep -> 'FILTER' StringList                   (32)
	QueryStep -> 'MAP' String '[' ListColumnSchema ']'   (33)
	QueryStep -> 'BIN' '[' ListBinMap ']'              (34)
	QueryStep -> 'COUNT' MParam                        (35)
	QueryStep -> 'MIN' MParam                          (36)
	QueryStep -> 'MAX' MParam                          (37)
	QueryStep -> 'SUM' MParam                          (38)
	QueryStep -> 'MEAN' MParam                         (39)
	QueryStep -> 'GROUP' '(' ListGroupRow ')'          (40)
	GroupRow -> String 'BY' '[' ListValue ']'          (41)
	DataType -> 'Bool'                                 (42)
	DataType -> 'Int' Integer Integer                  (43)
	DataType -> 'Double' Double Double                 (44)
	DataType -> 'Text'                                 (45)
	DataType -> 'Enum' StringList                      (46)
	Value -> 'true'                                    (47)
	Value -> 'false'                                   (48)
	Value -> Integer                                   (49)
	Value -> Double                                    (50)
	Value -> String                                    (51)
	MParam -> String NoiseM Budget                     (52)
	MParam -> String                                   (53)
	MParam -> NoiseM                                   (54)
	MParam -> Budget                                   (55)
	MParam -> String NoiseM                            (56)
	MParam -> String Budget                            (57)
	MParam -> NoiseM Budget                            (58)
	MParam ->                                          (59)
	NoiseM -> 'Gauss'                                  (60)
	NoiseM -> 'Laplace'                                (61)
	BinMap -> String '[' ListValue ']'                 (62)
	ColumnSchema -> String DataType                    (63)
	ListQueryStep ->                                   (64)
	ListQueryStep -> QueryStep ';' ListQueryStep       (65)
	ListString ->                                      (66)
	ListString -> String                               (67)
	ListString -> String ',' ListString                (68)
	ListColumnSchema ->                                (69)
	ListColumnSchema -> ColumnSchema                   (70)
	ListColumnSchema -> ColumnSchema ',' ListColumnSchema   (71)
	ListBinMap ->                                      (72)
	ListBinMap -> BinMap                               (73)
	ListBinMap -> BinMap ',' ListBinMap                (74)
	ListValue ->                                       (75)
	ListValue -> Value                                 (76)
	ListValue -> Value ',' ListValue                   (77)
	ListQuery ->                                       (78)
	ListQuery -> Query ListQuery                       (79)
	ListGroupRow ->                                    (80)
	ListGroupRow -> GroupRow                           (81)
	ListGroupRow -> GroupRow ',' ListGroupRow          (82)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	','            { PT _ (TS _ 3) }
	';'            { PT _ (TS _ 4) }
	'='            { PT _ (TS _ 5) }
	'BIN'          { PT _ (TS _ 6) }
	'BY'           { PT _ (TS _ 7) }
	'Bool'         { PT _ (TS _ 8) }
	'COUNT'        { PT _ (TS _ 9) }
	'Double'       { PT _ (TS _ 10) }
	'Enum'         { PT _ (TS _ 11) }
	'FILTER'       { PT _ (TS _ 12) }
	'GROUP'        { PT _ (TS _ 13) }
	'Gauss'        { PT _ (TS _ 14) }
	'Int'          { PT _ (TS _ 15) }
	'Laplace'      { PT _ (TS _ 16) }
	'MAP'          { PT _ (TS _ 17) }
	'MAX'          { PT _ (TS _ 18) }
	'MEAN'         { PT _ (TS _ 19) }
	'MIN'          { PT _ (TS _ 20) }
	'RENAME'       { PT _ (TS _ 21) }
	'SELECT'       { PT _ (TS _ 22) }
	'SUM'          { PT _ (TS _ 23) }
	'TO'           { PT _ (TS _ 24) }
	'Text'         { PT _ (TS _ 25) }
	'['            { PT _ (TS _ 26) }
	']'            { PT _ (TS _ 27) }
	'false'        { PT _ (TS _ 28) }
	'true'         { PT _ (TS _ 29) }
	L_Ident        { PT _ (TV $$) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	%start_pQuery   rule  1
	%start_pDatasetId rule  2
	%start_pBudget  rule  3
	%start_pStringList rule  4
	%start_pQueryStep rule  5
	%start_pGroupRow rule  6
	%start_pDataType rule  7
	%start_pValue   rule  8
	%start_pMParam  rule  9
	%start_pNoiseM  rule  10
	%start_pBinMap  rule  11
	%start_pColumnSchema rule  12
	%start_pListQueryStep rule  13
	%start_pListString rule  14
	%start_pListColumnSchema rule  15
	%start_pListBinMap rule  16
	%start_pListValue rule  17
	%start_pListQuery rule  18
	%start_pListGroupRow rule  19
	Ident           rule  20
	Double          rule  21
	Integer         rule  22
	String          rule  23
	Prog            rule  24
	Query           rule  25
	DatasetId       rule  26
	Budget          rules 27, 28
	StringList      rule  29
	QueryStep       rules 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
	GroupRow        rule  41
	DataType        rules 42, 43, 44, 45, 46
	Value           rules 47, 48, 49, 50, 51
	MParam          rules 52, 53, 54, 55, 56, 57, 58, 59
	NoiseM          rules 60, 61
	BinMap          rule  62
	ColumnSchema    rule  63
	ListQueryStep   rules 64, 65
	ListString      rules 66, 67, 68
	ListColumnSchema rules 69, 70, 71
	ListBinMap      rules 72, 73, 74
	ListValue       rules 75, 76, 77
	ListQuery       rules 78, 79
	ListGroupRow    rules 80, 81, 82

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProg -> . Prog                              (rule 0)

	L_Ident        shift, and enter state 21
	%eof           reduce using rule 78

	Ident          goto state 26
	Prog           goto state 84
	Query          goto state 27
	ListQuery      goto state 85

State 1

	%start_pQuery -> . Query                            (rule 1)

	L_Ident        shift, and enter state 21

	Ident          goto state 26
	Query          goto state 83

State 2

	%start_pDatasetId -> . DatasetId                    (rule 2)

	L_integ        shift, and enter state 37

	Integer        goto state 81
	DatasetId      goto state 82

State 3

	%start_pBudget -> . Budget                          (rule 3)

	L_doubl        shift, and enter state 36

	Double         goto state 64
	Budget         goto state 80

State 4

	%start_pStringList -> . StringList                  (rule 4)

	'['            shift, and enter state 79

	StringList     goto state 78

State 5

	%start_pQueryStep -> . QueryStep                    (rule 5)

	'BIN'          shift, and enter state 48
	'COUNT'        shift, and enter state 49
	'FILTER'       shift, and enter state 50
	'GROUP'        shift, and enter state 51
	'MAP'          shift, and enter state 52
	'MAX'          shift, and enter state 53
	'MEAN'         shift, and enter state 54
	'MIN'          shift, and enter state 55
	'RENAME'       shift, and enter state 56
	'SELECT'       shift, and enter state 57
	'SUM'          shift, and enter state 58

	QueryStep      goto state 77

State 6

	%start_pGroupRow -> . GroupRow                      (rule 6)

	L_quoted       shift, and enter state 25

	String         goto state 22
	GroupRow       goto state 76

State 7

	%start_pDataType -> . DataType                      (rule 7)

	'Bool'         shift, and enter state 71
	'Double'       shift, and enter state 72
	'Enum'         shift, and enter state 73
	'Int'          shift, and enter state 74
	'Text'         shift, and enter state 75

	DataType       goto state 70

State 8

	%start_pValue -> . Value                            (rule 8)

	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_doubl        shift, and enter state 36
	L_integ        shift, and enter state 37
	L_quoted       shift, and enter state 25

	Double         goto state 29
	Integer        goto state 30
	String         goto state 31
	Value          goto state 69

State 9

	%start_pMParam -> . MParam                          (rule 9)

	'Gauss'        shift, and enter state 62
	'Laplace'      shift, and enter state 63
	L_doubl        shift, and enter state 36
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 59

	Double         goto state 64
	String         goto state 65
	Budget         goto state 66
	MParam         goto state 67
	NoiseM         goto state 68

State 10

	%start_pNoiseM -> . NoiseM                          (rule 10)

	'Gauss'        shift, and enter state 62
	'Laplace'      shift, and enter state 63

	NoiseM         goto state 61

State 11

	%start_pBinMap -> . BinMap                          (rule 11)

	L_quoted       shift, and enter state 25

	String         goto state 38
	BinMap         goto state 60

State 12

	%start_pColumnSchema -> . ColumnSchema              (rule 12)

	L_quoted       shift, and enter state 25

	String         goto state 41
	ColumnSchema   goto state 59

State 13

	%start_pListQueryStep -> . ListQueryStep            (rule 13)

	'BIN'          shift, and enter state 48
	'COUNT'        shift, and enter state 49
	'FILTER'       shift, and enter state 50
	'GROUP'        shift, and enter state 51
	'MAP'          shift, and enter state 52
	'MAX'          shift, and enter state 53
	'MEAN'         shift, and enter state 54
	'MIN'          shift, and enter state 55
	'RENAME'       shift, and enter state 56
	'SELECT'       shift, and enter state 57
	'SUM'          shift, and enter state 58
	%eof           reduce using rule 64

	QueryStep      goto state 46
	ListQueryStep  goto state 47

State 14

	%start_pListString -> . ListString                  (rule 14)

	L_quoted       shift, and enter state 25
	%eof           reduce using rule 66

	String         goto state 44
	ListString     goto state 45

State 15

	%start_pListColumnSchema -> . ListColumnSchema      (rule 15)

	L_quoted       shift, and enter state 25
	%eof           reduce using rule 69

	String         goto state 41
	ColumnSchema   goto state 42
	ListColumnSchemagoto state 43

State 16

	%start_pListBinMap -> . ListBinMap                  (rule 16)

	L_quoted       shift, and enter state 25
	%eof           reduce using rule 72

	String         goto state 38
	BinMap         goto state 39
	ListBinMap     goto state 40

State 17

	%start_pListValue -> . ListValue                    (rule 17)

	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_doubl        shift, and enter state 36
	L_integ        shift, and enter state 37
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 75

	Double         goto state 29
	Integer        goto state 30
	String         goto state 31
	Value          goto state 32
	ListValue      goto state 33

State 18

	%start_pListQuery -> . ListQuery                    (rule 18)

	L_Ident        shift, and enter state 21
	%eof           reduce using rule 78

	Ident          goto state 26
	Query          goto state 27
	ListQuery      goto state 28

State 19

	%start_pListGroupRow -> . ListGroupRow              (rule 19)

	L_quoted       shift, and enter state 25
	%eof           reduce using rule 80

	String         goto state 22
	GroupRow       goto state 23
	ListGroupRow   goto state 24

State 20

	Ident -> . L_Ident                                  (rule 20)

	L_Ident        shift, and enter state 21


State 21

	Ident -> L_Ident .                                  (rule 20)

	L_integ        reduce using rule 20


State 22

	GroupRow -> String . 'BY' '[' ListValue ']'         (rule 41)

	'BY'           shift, and enter state 115


State 23

	ListGroupRow -> GroupRow .                          (rule 81)
	ListGroupRow -> GroupRow . ',' ListGroupRow         (rule 82)

	')'            reduce using rule 81
	','            shift, and enter state 114
	%eof           reduce using rule 81


State 24

	%start_pListGroupRow -> ListGroupRow .              (rule 19)

	%eof           accept


State 25

	String -> L_quoted .                                (rule 23)

	','            reduce using rule 23
	';'            reduce using rule 23
	'BY'           reduce using rule 23
	'Bool'         reduce using rule 23
	'Double'       reduce using rule 23
	'Enum'         reduce using rule 23
	'Gauss'        reduce using rule 23
	'Int'          reduce using rule 23
	'Laplace'      reduce using rule 23
	'Text'         reduce using rule 23
	'['            reduce using rule 23
	']'            reduce using rule 23
	L_doubl        reduce using rule 23
	%eof           reduce using rule 23


State 26

	Query -> Ident . DatasetId Budget '=' '(' ListQueryStep ')'    (rule 25)

	L_integ        shift, and enter state 37

	Integer        goto state 81
	DatasetId      goto state 113

State 27

	ListQuery -> Query . ListQuery                      (rule 79)

	L_Ident        shift, and enter state 21
	%eof           reduce using rule 78

	Ident          goto state 26
	Query          goto state 27
	ListQuery      goto state 112

State 28

	%start_pListQuery -> ListQuery .                    (rule 18)

	%eof           accept


State 29

	Value -> Double .                                   (rule 50)

	','            reduce using rule 50
	']'            reduce using rule 50
	%eof           reduce using rule 50


State 30

	Value -> Integer .                                  (rule 49)

	','            reduce using rule 49
	']'            reduce using rule 49
	%eof           reduce using rule 49


State 31

	Value -> String .                                   (rule 51)

	','            reduce using rule 51
	']'            reduce using rule 51
	%eof           reduce using rule 51


State 32

	ListValue -> Value .                                (rule 76)
	ListValue -> Value . ',' ListValue                  (rule 77)

	','            shift, and enter state 111
	']'            reduce using rule 76
	%eof           reduce using rule 76


State 33

	%start_pListValue -> ListValue .                    (rule 17)

	%eof           accept


State 34

	Value -> 'false' .                                  (rule 48)

	','            reduce using rule 48
	']'            reduce using rule 48
	%eof           reduce using rule 48


State 35

	Value -> 'true' .                                   (rule 47)

	','            reduce using rule 47
	']'            reduce using rule 47
	%eof           reduce using rule 47


State 36

	Double -> L_doubl .                                 (rule 21)

	','            reduce using rule 21
	';'            reduce using rule 21
	'='            reduce using rule 21
	']'            reduce using rule 21
	L_doubl        reduce using rule 21
	%eof           reduce using rule 21


State 37

	Integer -> L_integ .                                (rule 22)

	','            reduce using rule 22
	']'            reduce using rule 22
	L_doubl        reduce using rule 22
	L_integ        reduce using rule 22
	%eof           reduce using rule 22


State 38

	BinMap -> String . '[' ListValue ']'                (rule 62)

	'['            shift, and enter state 110


State 39

	ListBinMap -> BinMap .                              (rule 73)
	ListBinMap -> BinMap . ',' ListBinMap               (rule 74)

	','            shift, and enter state 109
	']'            reduce using rule 73
	%eof           reduce using rule 73


State 40

	%start_pListBinMap -> ListBinMap .                  (rule 16)

	%eof           accept


State 41

	ColumnSchema -> String . DataType                   (rule 63)

	'Bool'         shift, and enter state 71
	'Double'       shift, and enter state 72
	'Enum'         shift, and enter state 73
	'Int'          shift, and enter state 74
	'Text'         shift, and enter state 75

	DataType       goto state 108

State 42

	ListColumnSchema -> ColumnSchema .                  (rule 70)
	ListColumnSchema -> ColumnSchema . ',' ListColumnSchema    (rule 71)

	','            shift, and enter state 107
	']'            reduce using rule 70
	%eof           reduce using rule 70


State 43

	%start_pListColumnSchema -> ListColumnSchema .      (rule 15)

	%eof           accept


State 44

	ListString -> String .                              (rule 67)
	ListString -> String . ',' ListString               (rule 68)

	','            shift, and enter state 106
	']'            reduce using rule 67
	%eof           reduce using rule 67


State 45

	%start_pListString -> ListString .                  (rule 14)

	%eof           accept


State 46

	ListQueryStep -> QueryStep . ';' ListQueryStep      (rule 65)

	';'            shift, and enter state 105


State 47

	%start_pListQueryStep -> ListQueryStep .            (rule 13)

	%eof           accept


State 48

	QueryStep -> 'BIN' . '[' ListBinMap ']'             (rule 34)

	'['            shift, and enter state 104


State 49

	QueryStep -> 'COUNT' . MParam                       (rule 35)

	';'            reduce using rule 59
	'Gauss'        shift, and enter state 62
	'Laplace'      shift, and enter state 63
	L_doubl        shift, and enter state 36
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 59

	Double         goto state 64
	String         goto state 65
	Budget         goto state 66
	MParam         goto state 103
	NoiseM         goto state 68

State 50

	QueryStep -> 'FILTER' . StringList                  (rule 32)

	'['            shift, and enter state 79

	StringList     goto state 102

State 51

	QueryStep -> 'GROUP' . '(' ListGroupRow ')'         (rule 40)

	'('            shift, and enter state 101


State 52

	QueryStep -> 'MAP' . String '[' ListColumnSchema ']'    (rule 33)

	L_quoted       shift, and enter state 25

	String         goto state 100

State 53

	QueryStep -> 'MAX' . MParam                         (rule 37)

	';'            reduce using rule 59
	'Gauss'        shift, and enter state 62
	'Laplace'      shift, and enter state 63
	L_doubl        shift, and enter state 36
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 59

	Double         goto state 64
	String         goto state 65
	Budget         goto state 66
	MParam         goto state 99
	NoiseM         goto state 68

State 54

	QueryStep -> 'MEAN' . MParam                        (rule 39)

	';'            reduce using rule 59
	'Gauss'        shift, and enter state 62
	'Laplace'      shift, and enter state 63
	L_doubl        shift, and enter state 36
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 59

	Double         goto state 64
	String         goto state 65
	Budget         goto state 66
	MParam         goto state 98
	NoiseM         goto state 68

State 55

	QueryStep -> 'MIN' . MParam                         (rule 36)

	';'            reduce using rule 59
	'Gauss'        shift, and enter state 62
	'Laplace'      shift, and enter state 63
	L_doubl        shift, and enter state 36
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 59

	Double         goto state 64
	String         goto state 65
	Budget         goto state 66
	MParam         goto state 97
	NoiseM         goto state 68

State 56

	QueryStep -> 'RENAME' . StringList 'TO' StringList    (rule 31)

	'['            shift, and enter state 79

	StringList     goto state 96

State 57

	QueryStep -> 'SELECT' . StringList                  (rule 30)

	'['            shift, and enter state 79

	StringList     goto state 95

State 58

	QueryStep -> 'SUM' . MParam                         (rule 38)

	';'            reduce using rule 59
	'Gauss'        shift, and enter state 62
	'Laplace'      shift, and enter state 63
	L_doubl        shift, and enter state 36
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 59

	Double         goto state 64
	String         goto state 65
	Budget         goto state 66
	MParam         goto state 94
	NoiseM         goto state 68

State 59

	%start_pColumnSchema -> ColumnSchema .              (rule 12)

	%eof           accept


State 60

	%start_pBinMap -> BinMap .                          (rule 11)

	%eof           accept


State 61

	%start_pNoiseM -> NoiseM .                          (rule 10)

	%eof           accept


State 62

	NoiseM -> 'Gauss' .                                 (rule 60)

	';'            reduce using rule 60
	L_doubl        reduce using rule 60
	%eof           reduce using rule 60


State 63

	NoiseM -> 'Laplace' .                               (rule 61)

	';'            reduce using rule 61
	L_doubl        reduce using rule 61
	%eof           reduce using rule 61


State 64

	Budget -> Double .                                  (rule 27)
	Budget -> Double . Double                           (rule 28)

	';'            reduce using rule 27
	'='            reduce using rule 27
	L_doubl        shift, and enter state 36
	%eof           reduce using rule 27

	Double         goto state 93

State 65

	MParam -> String . NoiseM Budget                    (rule 52)
	MParam -> String .                                  (rule 53)
	MParam -> String . NoiseM                           (rule 56)
	MParam -> String . Budget                           (rule 57)

	';'            reduce using rule 53
	'Gauss'        shift, and enter state 62
	'Laplace'      shift, and enter state 63
	L_doubl        shift, and enter state 36
	%eof           reduce using rule 53

	Double         goto state 64
	Budget         goto state 91
	NoiseM         goto state 92

State 66

	MParam -> Budget .                                  (rule 55)

	';'            reduce using rule 55
	%eof           reduce using rule 55


State 67

	%start_pMParam -> MParam .                          (rule 9)

	%eof           accept


State 68

	MParam -> NoiseM .                                  (rule 54)
	MParam -> NoiseM . Budget                           (rule 58)

	';'            reduce using rule 54
	L_doubl        shift, and enter state 36
	%eof           reduce using rule 54

	Double         goto state 64
	Budget         goto state 90

State 69

	%start_pValue -> Value .                            (rule 8)

	%eof           accept


State 70

	%start_pDataType -> DataType .                      (rule 7)

	%eof           accept


State 71

	DataType -> 'Bool' .                                (rule 42)

	','            reduce using rule 42
	']'            reduce using rule 42
	%eof           reduce using rule 42


State 72

	DataType -> 'Double' . Double Double                (rule 44)

	L_doubl        shift, and enter state 36

	Double         goto state 89

State 73

	DataType -> 'Enum' . StringList                     (rule 46)

	'['            shift, and enter state 79

	StringList     goto state 88

State 74

	DataType -> 'Int' . Integer Integer                 (rule 43)

	L_integ        shift, and enter state 37

	Integer        goto state 87

State 75

	DataType -> 'Text' .                                (rule 45)

	','            reduce using rule 45
	']'            reduce using rule 45
	%eof           reduce using rule 45


State 76

	%start_pGroupRow -> GroupRow .                      (rule 6)

	%eof           accept


State 77

	%start_pQueryStep -> QueryStep .                    (rule 5)

	%eof           accept


State 78

	%start_pStringList -> StringList .                  (rule 4)

	%eof           accept


State 79

	StringList -> '[' . ListString ']'                  (rule 29)

	']'            reduce using rule 66
	L_quoted       shift, and enter state 25

	String         goto state 44
	ListString     goto state 86

State 80

	%start_pBudget -> Budget .                          (rule 3)

	%eof           accept


State 81

	DatasetId -> Integer .                              (rule 26)

	L_doubl        reduce using rule 26
	%eof           reduce using rule 26


State 82

	%start_pDatasetId -> DatasetId .                    (rule 2)

	%eof           accept


State 83

	%start_pQuery -> Query .                            (rule 1)

	%eof           accept


State 84

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 85

	Prog -> ListQuery .                                 (rule 24)

	%eof           reduce using rule 24


State 86

	StringList -> '[' ListString . ']'                  (rule 29)

	']'            shift, and enter state 132


State 87

	DataType -> 'Int' Integer . Integer                 (rule 43)

	L_integ        shift, and enter state 37

	Integer        goto state 131

State 88

	DataType -> 'Enum' StringList .                     (rule 46)

	','            reduce using rule 46
	']'            reduce using rule 46
	%eof           reduce using rule 46


State 89

	DataType -> 'Double' Double . Double                (rule 44)

	L_doubl        shift, and enter state 36

	Double         goto state 130

State 90

	MParam -> NoiseM Budget .                           (rule 58)

	';'            reduce using rule 58
	%eof           reduce using rule 58


State 91

	MParam -> String Budget .                           (rule 57)

	';'            reduce using rule 57
	%eof           reduce using rule 57


State 92

	MParam -> String NoiseM . Budget                    (rule 52)
	MParam -> String NoiseM .                           (rule 56)

	';'            reduce using rule 56
	L_doubl        shift, and enter state 36
	%eof           reduce using rule 56

	Double         goto state 64
	Budget         goto state 129

State 93

	Budget -> Double Double .                           (rule 28)

	';'            reduce using rule 28
	'='            reduce using rule 28
	%eof           reduce using rule 28


State 94

	QueryStep -> 'SUM' MParam .                         (rule 38)

	';'            reduce using rule 38
	%eof           reduce using rule 38


State 95

	QueryStep -> 'SELECT' StringList .                  (rule 30)

	';'            reduce using rule 30
	%eof           reduce using rule 30


State 96

	QueryStep -> 'RENAME' StringList . 'TO' StringList    (rule 31)

	'TO'           shift, and enter state 128


State 97

	QueryStep -> 'MIN' MParam .                         (rule 36)

	';'            reduce using rule 36
	%eof           reduce using rule 36


State 98

	QueryStep -> 'MEAN' MParam .                        (rule 39)

	';'            reduce using rule 39
	%eof           reduce using rule 39


State 99

	QueryStep -> 'MAX' MParam .                         (rule 37)

	';'            reduce using rule 37
	%eof           reduce using rule 37


State 100

	QueryStep -> 'MAP' String . '[' ListColumnSchema ']'    (rule 33)

	'['            shift, and enter state 127


State 101

	QueryStep -> 'GROUP' '(' . ListGroupRow ')'         (rule 40)

	')'            reduce using rule 80
	L_quoted       shift, and enter state 25

	String         goto state 22
	GroupRow       goto state 23
	ListGroupRow   goto state 126

State 102

	QueryStep -> 'FILTER' StringList .                  (rule 32)

	';'            reduce using rule 32
	%eof           reduce using rule 32


State 103

	QueryStep -> 'COUNT' MParam .                       (rule 35)

	';'            reduce using rule 35
	%eof           reduce using rule 35


State 104

	QueryStep -> 'BIN' '[' . ListBinMap ']'             (rule 34)

	']'            reduce using rule 72
	L_quoted       shift, and enter state 25

	String         goto state 38
	BinMap         goto state 39
	ListBinMap     goto state 125

State 105

	ListQueryStep -> QueryStep ';' . ListQueryStep      (rule 65)

	')'            reduce using rule 64
	'BIN'          shift, and enter state 48
	'COUNT'        shift, and enter state 49
	'FILTER'       shift, and enter state 50
	'GROUP'        shift, and enter state 51
	'MAP'          shift, and enter state 52
	'MAX'          shift, and enter state 53
	'MEAN'         shift, and enter state 54
	'MIN'          shift, and enter state 55
	'RENAME'       shift, and enter state 56
	'SELECT'       shift, and enter state 57
	'SUM'          shift, and enter state 58
	%eof           reduce using rule 64

	QueryStep      goto state 46
	ListQueryStep  goto state 124

State 106

	ListString -> String ',' . ListString               (rule 68)

	']'            reduce using rule 66
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 66

	String         goto state 44
	ListString     goto state 123

State 107

	ListColumnSchema -> ColumnSchema ',' . ListColumnSchema    (rule 71)

	']'            reduce using rule 69
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 69

	String         goto state 41
	ColumnSchema   goto state 42
	ListColumnSchemagoto state 122

State 108

	ColumnSchema -> String DataType .                   (rule 63)

	','            reduce using rule 63
	']'            reduce using rule 63
	%eof           reduce using rule 63


State 109

	ListBinMap -> BinMap ',' . ListBinMap               (rule 74)

	']'            reduce using rule 72
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 72

	String         goto state 38
	BinMap         goto state 39
	ListBinMap     goto state 121

State 110

	BinMap -> String '[' . ListValue ']'                (rule 62)

	']'            reduce using rule 75
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_doubl        shift, and enter state 36
	L_integ        shift, and enter state 37
	L_quoted       shift, and enter state 25

	Double         goto state 29
	Integer        goto state 30
	String         goto state 31
	Value          goto state 32
	ListValue      goto state 120

State 111

	ListValue -> Value ',' . ListValue                  (rule 77)

	']'            reduce using rule 75
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_doubl        shift, and enter state 36
	L_integ        shift, and enter state 37
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 75

	Double         goto state 29
	Integer        goto state 30
	String         goto state 31
	Value          goto state 32
	ListValue      goto state 119

State 112

	ListQuery -> Query ListQuery .                      (rule 79)

	%eof           reduce using rule 79


State 113

	Query -> Ident DatasetId . Budget '=' '(' ListQueryStep ')'    (rule 25)

	L_doubl        shift, and enter state 36

	Double         goto state 64
	Budget         goto state 118

State 114

	ListGroupRow -> GroupRow ',' . ListGroupRow         (rule 82)

	')'            reduce using rule 80
	L_quoted       shift, and enter state 25
	%eof           reduce using rule 80

	String         goto state 22
	GroupRow       goto state 23
	ListGroupRow   goto state 117

State 115

	GroupRow -> String 'BY' . '[' ListValue ']'         (rule 41)

	'['            shift, and enter state 116


State 116

	GroupRow -> String 'BY' '[' . ListValue ']'         (rule 41)

	']'            reduce using rule 75
	'false'        shift, and enter state 34
	'true'         shift, and enter state 35
	L_doubl        shift, and enter state 36
	L_integ        shift, and enter state 37
	L_quoted       shift, and enter state 25

	Double         goto state 29
	Integer        goto state 30
	String         goto state 31
	Value          goto state 32
	ListValue      goto state 139

State 117

	ListGroupRow -> GroupRow ',' ListGroupRow .         (rule 82)

	')'            reduce using rule 82
	%eof           reduce using rule 82


State 118

	Query -> Ident DatasetId Budget . '=' '(' ListQueryStep ')'    (rule 25)

	'='            shift, and enter state 138


State 119

	ListValue -> Value ',' ListValue .                  (rule 77)

	']'            reduce using rule 77
	%eof           reduce using rule 77


State 120

	BinMap -> String '[' ListValue . ']'                (rule 62)

	']'            shift, and enter state 137


State 121

	ListBinMap -> BinMap ',' ListBinMap .               (rule 74)

	']'            reduce using rule 74
	%eof           reduce using rule 74


State 122

	ListColumnSchema -> ColumnSchema ',' ListColumnSchema .    (rule 71)

	']'            reduce using rule 71
	%eof           reduce using rule 71


State 123

	ListString -> String ',' ListString .               (rule 68)

	']'            reduce using rule 68
	%eof           reduce using rule 68


State 124

	ListQueryStep -> QueryStep ';' ListQueryStep .      (rule 65)

	')'            reduce using rule 65
	%eof           reduce using rule 65


State 125

	QueryStep -> 'BIN' '[' ListBinMap . ']'             (rule 34)

	']'            shift, and enter state 136


State 126

	QueryStep -> 'GROUP' '(' ListGroupRow . ')'         (rule 40)

	')'            shift, and enter state 135


State 127

	QueryStep -> 'MAP' String '[' . ListColumnSchema ']'    (rule 33)

	']'            reduce using rule 69
	L_quoted       shift, and enter state 25

	String         goto state 41
	ColumnSchema   goto state 42
	ListColumnSchemagoto state 134

State 128

	QueryStep -> 'RENAME' StringList 'TO' . StringList    (rule 31)

	'['            shift, and enter state 79

	StringList     goto state 133

State 129

	MParam -> String NoiseM Budget .                    (rule 52)

	';'            reduce using rule 52
	%eof           reduce using rule 52


State 130

	DataType -> 'Double' Double Double .                (rule 44)

	','            reduce using rule 44
	']'            reduce using rule 44
	%eof           reduce using rule 44


State 131

	DataType -> 'Int' Integer Integer .                 (rule 43)

	','            reduce using rule 43
	']'            reduce using rule 43
	%eof           reduce using rule 43


State 132

	StringList -> '[' ListString ']' .                  (rule 29)

	','            reduce using rule 29
	';'            reduce using rule 29
	'TO'           reduce using rule 29
	']'            reduce using rule 29
	%eof           reduce using rule 29


State 133

	QueryStep -> 'RENAME' StringList 'TO' StringList .    (rule 31)

	';'            reduce using rule 31
	%eof           reduce using rule 31


State 134

	QueryStep -> 'MAP' String '[' ListColumnSchema . ']'    (rule 33)

	']'            shift, and enter state 142


State 135

	QueryStep -> 'GROUP' '(' ListGroupRow ')' .         (rule 40)

	';'            reduce using rule 40
	%eof           reduce using rule 40


State 136

	QueryStep -> 'BIN' '[' ListBinMap ']' .             (rule 34)

	';'            reduce using rule 34
	%eof           reduce using rule 34


State 137

	BinMap -> String '[' ListValue ']' .                (rule 62)

	','            reduce using rule 62
	']'            reduce using rule 62
	%eof           reduce using rule 62


State 138

	Query -> Ident DatasetId Budget '=' . '(' ListQueryStep ')'    (rule 25)

	'('            shift, and enter state 141


State 139

	GroupRow -> String 'BY' '[' ListValue . ']'         (rule 41)

	']'            shift, and enter state 140


State 140

	GroupRow -> String 'BY' '[' ListValue ']' .         (rule 41)

	')'            reduce using rule 41
	','            reduce using rule 41
	%eof           reduce using rule 41


State 141

	Query -> Ident DatasetId Budget '=' '(' . ListQueryStep ')'    (rule 25)

	')'            reduce using rule 64
	'BIN'          shift, and enter state 48
	'COUNT'        shift, and enter state 49
	'FILTER'       shift, and enter state 50
	'GROUP'        shift, and enter state 51
	'MAP'          shift, and enter state 52
	'MAX'          shift, and enter state 53
	'MEAN'         shift, and enter state 54
	'MIN'          shift, and enter state 55
	'RENAME'       shift, and enter state 56
	'SELECT'       shift, and enter state 57
	'SUM'          shift, and enter state 58

	QueryStep      goto state 46
	ListQueryStep  goto state 143

State 142

	QueryStep -> 'MAP' String '[' ListColumnSchema ']' .    (rule 33)

	';'            reduce using rule 33
	%eof           reduce using rule 33


State 143

	Query -> Ident DatasetId Budget '=' '(' ListQueryStep . ')'    (rule 25)

	')'            shift, and enter state 144


State 144

	Query -> Ident DatasetId Budget '=' '(' ListQueryStep ')' .    (rule 25)

	L_Ident        reduce using rule 25
	%eof           reduce using rule 25


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 83
Number of terminals: 33
Number of non-terminals: 44
Number of states: 145
